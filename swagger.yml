openapi: 3.0.3
info:
  title: SEARCH Gateway Service
  description: SEARCH Gateway Service using Flask, OpenAPI and Connexion
  version: "1.0.0"
servers:
  - url: http://localhost:8000
    description: Rest Server for SEARCH-AI-Gateway
paths:
  /loginLMSTest:
    get:
      operationId: main.main
      tags:
        - MLS Services
      summary: Example Service
      description: Example Service
      responses:
        "200": # status code
          description: Example Service for Printing LOs
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SkillDto'
  /skill/{id}:
    get:
      operationId: sse_gateway.getSkill
      tags:
        - SSE Services
      summary: Return an skill with given ID
      description: Return an skill with given ID
      parameters:
        - name: id
          in: path
          description: skill ID
          required: true
          schema:
            type: string
      responses:
        "200": # status code
          description: Return an skill with given ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SkillDto'
  /skill/{id}/del:
    delete:
      operationId: sse_gateway.delSkill
      tags:
        - SSE Services
      summary: Delete an skill with given ID
      description: Delete an skill with given ID
      parameters:
        - name: id
          in: path
          description: skill ID
          required: true
          schema:
            type: string
      responses:
        "200": # status code
          description: Delete an skill with given ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SkillDto'   

  /skill/{skillId}/adapt:
    put:
      operationId: sse_gateway.adaptSkill
      summary: 'Adapts a skill'
      description: Adapts a skill .
      parameters:
        - name: skillId
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SkillCreationDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SkillDto'
      tags:
        - SSE Services 

  /skill-repositories/byid/{repositoryId}:
    get:
      operationId: sse_gateway.getRepository
      tags:
        - SSE Services
      summary: Return an Repo with given ID
      description: Return an Repo with given ID
      parameters:
        - name: repositoryId
          in: path
          description: Repo ID
          required: true
          schema:
            type: string
      responses:
        "200": # status code
          description: Return an repo with given ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnresolvedSkillRepositoryDto'
  /skill-repositories/byowner/{ownerId}:
    get:
      operationId: sse_gateway.getRepositoryByOwner
      tags:
        - SSE Services
      summary: Return all Repos by owner ID
      description: Return all Repos by owner ID
      parameters:
        - name: ownerId
          in: path
          description: Repo ID
          required: true
          schema:
            type: string
      responses:
        "200": # status code
          description: Return all Repos by owner ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SkillRepositoryListDto'
  /skill-repositories/{repoId}/del:
    delete:
      operationId: sse_gateway.deleteRepository
      tags:
        - SSE Services
      summary: Delete a Repository by ID
      description: Return deleted Repo or Error message 
      parameters:
        - name: repoId
          in: path
          description: Repo ID
          required: true
          schema:
            type: string
      responses:
        "200": # status code
          description: Return deleted Repo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SkillRepositoryDto'                
  /skill-repositories/create:
    post:
      operationId: sse_gateway.createRepository
      summary: 'Creates ne Skill Repo'
      description: Creates a new skill repository for the specified user.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SkillRepositoryCreationDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SkillRepositoryDto'
      tags:
        - SSE Services  
  /skill-repositories/:
    put:
      operationId: sse_gateway.adaptRepository
      summary: 'adapts a skill repository'
      description: adapts a skill repository.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SkillRepositoryDto'
      responses:
        '201':  
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SkillRepositoryDto'
      tags:
        - SSE Services

  /user/qualification/create:
    post:
      operationId: sse_gateway.createQualification
      summary: ''
      description: Creates a new qualification for a user.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QualificationCreationDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QualificationDto'
      tags:
        - SSE Services
  /skill/:
    post:
      operationId: sse_gateway.createSkill
      summary: 'adapts a skill'
      description: adapts a skill.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SkillCreationDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SkillDto'
      tags:
        - SSE Services   
  /learningUnits/showAllLearningUnits:
    get:
      operationId: sse_gateway.getAllLU
      tags:
        - SSE Services
      summary: Lists all learningUnits.
      description: Lists all learningUnits.
      responses:
        "200": # status code
          description: Return an skill with given ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchLearningUnitListDto'
  /upstream/test_upstream:
    get:
      operationId: l3s_gateway.testUP
      tags:
        - L3S Services
      summary: Test of UpStreamService.
      description: Test of UpStreamService.
      responses:
        "200": # status code
          description: Return an skill with given ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SkillDto'
  /downstream/test_downstream:
    get:
      operationId: l3s_gateway.testDown
      tags:
        - L3S Services
      summary: Test of DownService.
      description: Test of DownService.
      responses:
        "200": # status code
          description: Return an skill with given ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SkillDto'                            

components:
  securitySchemes:
    bearer:
      scheme: bearer
      bearerFormat: JWT
      type: http
  schemas:
    SkillRepositorySearchDto:
      type: object
      properties:
        pageSize:
          type: number
        page:
          type: number
        name:
          type: string
        version:
          type: string
        owner:
          type: string
    SkillRepositoryDto:
      type: object
      properties:
        owner:
          type: string
        id:
          type: string
        taxonomy:
          type: string
        description:
          type: string
        access_rights:
          type: object
        name:
          type: string
        version:
          type: string
      required:
        - owner
        - id
        - name
    SkillRepositoryListDto:
      type: object
      properties:
        repositories:
          type: array
          items:
            $ref: '#/components/schemas/SkillRepositoryDto'
      required:
        - repositories
    UnresolvedSkillRepositoryDto:
      type: object
      properties:
        owner:
          type: string
        id:
          type: string
        taxonomy:
          type: string
        description:
          type: string
        access_rights:
          type: object
        name:
          type: string
        version:
          type: string
        skills:
          type: array
          items:
            type: string
      required:
        - owner
        - id
        - name
        - skills
    SkillSearchDto:
      type: object
      properties:
        pageSize:
          type: number
        page:
          type: number
        name:
          type: string
        level:
          type: number
        skillMap:
          type: string
    SkillDto:
      type: object
      properties:
        id:
          type: string
        nestedSkills:
          type: array
          items:
            type: string
        repositoryId:
          type: string
        name:
          type: string
        level:
          type: number
        description:
          type: string
      required:
        - id
        - nestedSkills
        - repositoryId
        - name
        - level
    SkillListDto:
      type: object
      properties:
        skills:
          type: array
          items:
            $ref: '#/components/schemas/SkillDto'
      required:
        - skills
    ResolvedSkillDto:
      type: object
      properties:
        id:
          type: string
        nestedSkills:
          type: array
          items:
            $ref: '#/components/schemas/ResolvedSkillDto'
        name:
          type: string
        level:
          type: number
        description:
          type: string
      required:
        - id
        - nestedSkills
        - name
        - level
    ResolvedSkillRepositoryDto:
      type: object
      properties:
        id:
          type: string
        taxonomy:
          type: string
        description:
          type: string
        skills:
          type: array
          items:
            $ref: '#/components/schemas/ResolvedSkillDto'
        name:
          type: string
        version:
          type: string
      required:
        - id
        - skills
        - name
    ResolvedSkillListDto:
      type: object
      properties:
        skills:
          type: array
          items:
            $ref: '#/components/schemas/ResolvedSkillDto'
      required:
        - skills
    SkillRepositoryCreationDto:
      type: object
      properties:
        ownerId:
          type: string
        name:
          type: string
        description:
          type: string
        version:
          type: string
        access_rights:
          type: object
      required:
        - ownerId
        - name
    SkillCreationDto:
      type: object
      properties:
        owner:
          type: string
          description: Used to validate that the user is the owner of the target repository.
        name:
          type: string
        level:
          type: number
        description:
          type: string
        nestedSkills:
          type: array
          items:
            $ref: '#/components/schemas/SkillCreationDto'
      required:
        - owner
        - name
        - level
        - nestedSkills
    NuggetCreationDto:
      type: object
      properties:
        isTypeOf:
          type: array
          example:
            - ANALYZE
            - CONTENT
            - EXAMPLE
            - EXERCISE
            - INTRODUCTION
            - TEST
          items:
            type: string
            enum:
              - ANALYZE
              - INTRODUCTION
              - CONTENT
              - EXAMPLE
              - EXERCISE
              - TEST
        language:
          type: string
        resource:
          type: string
        processingTime:
          type: string
        presenter:
          type: string
        mediatype:
          type: string
      required:
        - isTypeOf
        - language
        - resource
        - processingTime
    NuggetDto:
      type: object
      properties:
        isTypeOf:
          type: array
          example:
            - ANALYZE
            - CONTENT
            - EXAMPLE
            - EXERCISE
            - INTRODUCTION
            - TEST
          items:
            type: string
            enum:
              - ANALYZE
              - INTRODUCTION
              - CONTENT
              - EXAMPLE
              - EXERCISE
              - TEST
        language:
          type: string
        resource:
          type: string
        processingTime:
          type: string
        presenter:
          type: string
        mediatype:
          type: string
        id:
          type: string
      required:
        - isTypeOf
        - language
        - resource
        - processingTime
        - id
    PathGoalDto:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        targetAudience:
          type: string
        description:
          type: string
        requirements:
          type: array
          items:
            $ref: '#/components/schemas/ResolvedSkillDto'
        pathGoals:
          type: array
          items:
            $ref: '#/components/schemas/ResolvedSkillDto'
      required:
        - id
        - title
        - requirements
        - pathGoals
    LearningPathDto:
      type: object
      properties:
        id:
          type: string
        goals:
          type: array
          items:
            $ref: '#/components/schemas/PathGoalDto'
        title:
          type: string
        description:
          type: string
      required:
        - id
        - goals
        - title
    LearningPathListDto:
      type: object
      properties:
        learningPaths:
          type: array
          items:
            $ref: '#/components/schemas/LearningPathDto'
      required:
        - learningPaths
    PathGoalCreationDto:
      type: object
      properties:
        title:
          type: string
        targetAudience:
          type: string
        description:
          type: string
        requirements:
          type: array
          items:
            $ref: '#/components/schemas/ResolvedSkillDto'
        pathGoals:
          type: array
          items:
            $ref: '#/components/schemas/ResolvedSkillDto'
      required:
        - title
        - requirements
        - pathGoals
    LearningPathCreationDto:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        goals:
          type: array
          items:
            $ref: '#/components/schemas/PathGoalCreationDto'
      required:
        - title
        - goals
    SearchLearningUnitDto:
      type: object
      properties:
        searchId:
          type: string
        processingTime:
          type: string
        rating:
          type: string
        contentCreator:
          type: string
        contentProvider:
          type: string
        targetAudience:
          type: string
        semanticDensity:
          type: string
        semanticGravity:
          type: string
        contentTags:
          type: array
          items:
            type: string
        contextTags:
          type: array
          items:
            type: string
        linkToHelpMaterial:
          type: string
        title:
          type: string
        resource:
          type: string
          description: Should point to a resource (e.g. a website) which contains the learning unit.
        language:
          type: string
        description:
          type: string
        teachingGoals:
          default: []
          type: array
          items:
            type: string
        requiredSkills:
          default: []
          type: array
          items:
            type: string
      required:
        - searchId
        - title
        - resource
        - language
        - teachingGoals
        - requiredSkills
    SearchLearningUnitListDto:
      type: object
      properties:
        learningUnits:
          default: []
          type: array
          items:
            $ref: '#/components/schemas/SearchLearningUnitDto'
      required:
        - learningUnits
    SearchLearningUnitCreationDto:
      type: object
      properties:
        processingTime:
          type: string
        rating:
          type: string
        contentCreator:
          type: string
        contentProvider:
          type: string
        targetAudience:
          type: string
        semanticDensity:
          type: string
        semanticGravity:
          type: string
        contentTags:
          type: array
          items:
            type: string
        contextTags:
          type: array
          items:
            type: string
        linkToHelpMaterial:
          type: string
        title:
          type: string
        resource:
          type: string
          description: Should point to a resource (e.g. a website) which contains the learning unit.
        language:
          type: string
        description:
          type: string
        teachingGoals:
          default: []
          type: array
          items:
            type: string
        requiredSkills:
          default: []
          type: array
          items:
            type: string
      required:
        - title
        - resource
        - language
        - teachingGoals
        - requiredSkills
    EdgeDto:
      type: object
      properties:
        from:
          type: string
        to:
          type: string
      required:
        - from
        - to
    NodeDto:
      type: object
      properties:
        id:
          type: string
        metadata:
          type: string
      required:
        - id
        - metadata
    GraphDto:
      type: object
      properties:
        edges:
          type: array
          items:
            $ref: '#/components/schemas/EdgeDto'
        nodes:
          type: array
          items:
            $ref: '#/components/schemas/NodeDto'
      required:
        - edges
        - nodes
    CheckGraphDto:
      type: object
      properties:
        isAcyclic:
          type: boolean
      required:
        - isAcyclic
    PathDto:
      type: object
      properties:
        luIDs:
          type: array
          items:
            type: object
      required:
        - luIDs
    UserCreationDto:
      type: object
      properties:
        name:
          type: string
        companyId:
          type: string
      required:
        - name
    UserDto:
      type: object
      properties:
        name:
          type: string
        companyId:
          type: string
        id:
          type: string
      required:
        - name
        - id
    CompanyCreationDto:
      type: object
      properties:
        name:
          type: string
      required:
        - name
    CompanyDto:
      type: object
      properties:
        name:
          type: string
        id:
          type: string
        users:
          type: array
          items:
            $ref: '#/components/schemas/UserDto'
      required:
        - name
        - id
        - users
    LearningProfileCreationDto:
      type: object
      properties:
        mediaType:
          type: string
          description: Used to validate that the user is the owner of the target repository.
        language:
          type: string
        semanticDensity:
          type: number
        semanticGravity:
          type: number
        processingTimePerUnit:
          type: string
        userId:
          type: string
      required:
        - userId
    SkillProfileCreationDto:
      type: object
      properties:
        jobHistory:
          type: string
          description: Used to validate that the user is the owner of the target repository.
        professionalInterests:
          type: string
        userId:
          type: string
      required:
        - userId
    SkillProfileDto:
      type: object
      properties:
        jobHistory:
          type: string
          description: Used to validate that the user is the owner of the target repository.
        professionalInterests:
          type: string
        userId:
          type: string
        id:
          type: string
      required:
        - userId
        - id
    QualificationCreationDto:
      type: object
      properties:
        id:
          type: string
          description: Used to validate that the user is the owner of the target repository.
        name:
          type: string
        year:
          type: number
        userId:
          type: string
      required:
        - id
        - name
        - year
        - userId
    QualificationDto:
      type: object
      properties:
        id:
          type: string
          description: Used to validate that the user is the owner of the target repository.
        name:
          type: string
        year:
          type: number
        userId:
          type: string
      required:
        - id
        - name
        - year
        - userId
